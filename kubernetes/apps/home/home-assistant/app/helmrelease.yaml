---
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: &app home-assistant
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.1.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s-charts
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  values:
    controllers:
      home-assistant:
        annotations:
          reloader.stakater.com/auto: "true"
        initContainers:
          init-db:
            image:
              repository: ghcr.io/buroa/postgres-init
              tag: 16
            envFrom: &envFrom
              - secretRef:
                  name: home-assistant-secret
        containers:
          app:
            image:
              repository: ghcr.io/buroa/home-assistant
              tag: 2024.5.2@sha256:e0691f0c136ada1ecd697809e0e1df9c1ce19ecb7143d303b81acb567e6a08e4
            env:
              HASS_UNIT_SYSTEM: imperial
              HASS_PURGE_KEEP_DAYS: 30
              HASS_EXTERNAL_URL: https://hass.${PUBLIC_DOMAIN}
              HASS_TRUSTED_PROXIES: ${CLUSTER_POD_IP_CIDR}
              TZ: ${TIMEZONE}
            envFrom: *envFrom
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities:
                drop:
                  - ALL
        pod:
          annotations:
            k8s.v1.cni.cncf.io/networks: |
              [{
                "name": "multus-iot",
                "namespace": "networking",
                "ips": ["192.168.99.254/24"]
              }]
          securityContext:
            runAsUser: 568
            runAsGroup: 568
            runAsNonRoot: true
            fsGroup: 568
            fsGroupChangePolicy: OnRootMismatch
    ingress:
      app:
        className: internal
        annotations:
          hajimari.io/icon: mdi:home-assistant
          hajimari.io/url: https://hass.${PUBLIC_DOMAIN}
        hosts:
          - host: &host "{{ .Release.Name }}.${PUBLIC_DOMAIN}"
            paths: &paths
              - path: /
                service:
                  identifier: app
                  port: http
          - host: &customHost hass.${PUBLIC_DOMAIN}
            paths: *paths
        tls:
          - hosts:
              - *host
              - *customHost
    persistence:
      config:
        existingClaim: *app
      logs:
        type: emptyDir
        globalMounts:
          - path: /config/logs
      tmp:
        type: emptyDir
      tts:
        type: emptyDir
        globalMounts:
          - path: /config/tts
    service:
      app:
        controller: *app
        ports:
          http:
            port: 8123
